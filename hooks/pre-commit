#!/usr/bin/env php
<?php
/**
 * pre commit hook to copy in the ./git/hooks folder
 * 
 * ! don't forget it to make it executable
 * 
 * checks if
 * - PHPUnit tests pass
 * - generates PHP documentation
 * 
 * clean up logic consists of:
 * - adding the generated documentation to the commit
 * - cleaning the logs
 */

echo PHP_EOL."Running PHPUnit tests...".PHP_EOL;

exec(
    'docker exec -t udacity_sl_automation-php-1 bash -c "/var/www/vendor/bin/phpunit /var/www/tests --colors --testdox"', 
    $phpUnitOutput, 
    $phpUnitReturnCode
);

echo PHP_EOL . implode(PHP_EOL, $phpUnitOutput) . PHP_EOL;

if ($phpUnitReturnCode !== 0) {
    echo "PHPUnit tests did not pass, aborting commit..." . PHP_EOL;
    exit(1);
}

echo PHP_EOL."generating PHP docs...".PHP_EOL;

if (!file_exists('phpDocumentor.phar')) {
    exec('wget https://phpdoc.org/phpDocumentor.phar', $wgetPhpDocumentorOutput, $wgetPhpDocumentorReturnCode);
    if ($wgetPhpDocumentorReturnCode !== 0) {
        echo "could not obtain PHPDocumentor, aborting commit..." . PHP_EOL;
        exit(1);
    }
}
exec('php phpDocumentor.phar', $genPhpDocsOutput, $genPhpDocsReturnCode);

echo PHP_EOL . implode(PHP_EOL, $genPhpDocsOutput) . PHP_EOL;

if ($genPhpDocsReturnCode !== 0) {
    echo "could not generate PHP docs, aborting commit..." . PHP_EOL;
    exit(1);
}

// adding generated docs in current commit
exec('git add .');

// cleaning the logs after work done on this commit
exec('sh scripts/sh/clean-logs.sh');

exit(0);